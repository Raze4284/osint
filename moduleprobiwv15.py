from telethon import events
import asyncio
from .. import loader  # –ò–º–ø–æ—Ä—Ç –∑–∞–≥—Ä—É–∑—á–∏–∫–∞ –º–æ–¥—É–ª–µ–π Hikka

class SearchModule(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Telegram –±–æ—Ç–∞"""
    strings = {"name": "ShinigamiEyes"}

    async def wait_for_bot_response(self, client, chat_id, timeout=60):
        """–û–∂–∏–¥–∞–µ—Ç –æ—Ç–≤–µ—Ç –æ—Ç –±–æ—Ç–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏"""
        start_time = asyncio.get_event_loop().time()
        
        while (asyncio.get_event_loop().time() - start_time) < timeout:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            async for message in client.iter_messages(chat_id, limit=5):
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–∞–º–æ–µ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –æ—Ç–≤–µ—Ç
                if message.date.timestamp() > start_time:
                    return message.text
            
            # –ñ–¥–µ–º 1 —Å–µ–∫—É–Ω–¥—É –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
            await asyncio.sleep(1)
        
        return "‚è±Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω —Ç–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç –±–æ—Ç–∞"

    async def process_command(self, message, bot_username):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –±–æ—Ç—É"""
        args = message.raw_text.split(" ", 1)
        
        # –ï—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –µ—Å—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö –∫–∞–∫ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if len(args) > 1:
            query_value = args[1]
            status_message = await message.reply(f"üì± –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –±–æ—Ç—É @{FS00CIETY_bot}:\n\n{query_value}\n\n–û–∂–∏–¥–∞—é –æ—Ç–≤–µ—Ç –æ—Ç –±–æ—Ç–∞...")
            
            # –ü–æ–ª—É—á–∞–µ–º ID —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_id = message.from_id
            
            # –ñ–¥–µ–º –æ—Ç–≤–µ—Ç –æ—Ç –±–æ—Ç–∞
            response = await self.wait_for_bot_response(message.client, bot_username)
            
            try:
                # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                safe_result = str(response).replace('<', '&lt;').replace('>', '&gt;') if response else "‚ùå –û—Ç–≤–µ—Ç –Ω–µ –ø–æ–ª—É—á–µ–Ω"
                await status_message.edit(f"üîç –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞:\n{safe_result}", parse_mode=None)
            except Exception as e:
                await status_message.delete()
                await message.reply(f"üîç –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞:\n{safe_result}", parse_mode=None)
        else:
            await message.reply(f"‚ÑπÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã.\n–ü—Ä–∏–º–µ—Ä: .osphone +79XXXXXXXXX")

    async def osphone_cmd(self, message):
        """–ü–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
        await self.process_command(message, "@FS00CIETY_bot")

    async def ospass_cmd(self, message):
        """–ü–æ–∏—Å–∫ –ø–æ –§–ò–û"""
        await self.process_command(message, "@FS00CIETY_bot")

    async def oscar_cmd(self, message):
        """–ü–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É –∞–≤—Ç–æ–º–æ–±–∏–ª—è"""
        await self.process_command(message, "@FS00CIETY_bot)

    async def osadress_cmd(self, message):
        """–ü–æ–∏—Å–∫ –ø–æ –∞–¥—Ä–µ—Å—É"""
        await self.process_command(message, "@FS00CIETY_bot")

    async def osip_cmd(self, message):
        """–ü–æ–∏—Å–∫ –ø–æ IP-–∞–¥—Ä–µ—Å—É"""
        await self.process_command(message, "@FS00CIETY_bot")