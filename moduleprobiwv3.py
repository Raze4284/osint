from telethon import events
import requests

from .. import loader  # –ò–º–ø–æ—Ä—Ç –∑–∞–≥—Ä—É–∑—á–∏–∫–∞ –º–æ–¥—É–ª–µ–π Hikka

TOKEN = "7352788141:AAFwTI8fhYV6WXLSPEE1dB5PYEnXlyb6auE"  
API_URL = f"https://api.telegram.org/bot{TOKEN}"

class SearchModule(loader.Module):
    strings = {"name": "SearchModule"}

    async def search_request(self, method, query_value):
        url = f"{API_URL}/{method}"
        params = {"query": query_value}

        try:
            response = requests.get(url, params=params)
            response.raise_for_status()
            data = response.json()
            return data.get("result", "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
        except requests.exceptions.RequestException as e:
            return f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}"

    async def osphone_cmd(self, message):
        args = message.raw_text.split(" ", 1)
        if len(args) < 2:
            await message.reply("‚ö† –£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞!")
            return
        result = await self.search_request("phone", args[1])
        await message.reply(f"üìû –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞:\n{result}")

    async def ospass_cmd(self, message):
        args = message.raw_text.split(" ", 1)
        if len(args) < 2:
            await message.reply("‚ö† –£–∫–∞–∂–∏—Ç–µ –§–ò–û!")
            return
        result = await self.search_request("name", args[1])
        await message.reply(f"üÜî –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞:\n{result}")

    async def oscar_cmd(self, message):
        args = message.raw_text.split(" ", 1)
        if len(args) < 2:
            await message.reply("‚ö† –£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –∞–≤—Ç–æ–º–æ–±–∏–ª—è!")
            return
        result = await self.search_request("car", args[1])
        await message.reply(f"üöó –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞:\n{result}")

    async def osadress_cmd(self, message):
        args = message.raw_text.split(" ", 1)
        if len(args) < 2:
            await message.reply("‚ö† –£–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å!")
            return
        result = await self.search_request("address", args[1])
        await message.reply(f"üè† –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞:\n{result}")

    async def osip_cmd(self, message):
        args = message.raw_text.split(" ", 1)
        if len(args) < 2:
            await message.reply("‚ö† –£–∫–∞–∂–∏—Ç–µ IP-–∞–¥—Ä–µ—Å!")
            return
        result = await self.search_request("ip", args[1])
        await message.reply(f"üåç –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞:\n{result}")
